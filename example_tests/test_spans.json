{
    "resourceSpans": [
        {
            "resource": {
                "attributes": [
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "python-opentelemetry-access"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.12.7"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.12.7 (main, Oct 16 2024, 07:12:08) [Clang 18.1.8 ]"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "intValue": "74937"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "python3.12"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/.local/share/uv/python/cpython-3.12.7-macos-aarch64-none/bin/python3.12"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/python3 /Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/pytest --export-traces example_tests"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/python3"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/pytest --export-traces example_tests"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "jonaspuksta"
                        }
                    },
                    {
                        "key": "service.version",
                        "value": {
                            "stringValue": "e8d829a8db1d196b5229f48efcacdbbd47eda24b"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "pytest-opentelemetry"
                    },
                    "spans": [
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "3459c5930c87ef3d",
                            "parentSpanId": "9285d5e20ea6b9b5",
                            "flags": 256,
                            "name": "event_loop_policy setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533053535000",
                            "endTimeUnixNano": "1742478533053582000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop_policy"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1187"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "session"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "9285d5e20ea6b9b5",
                            "parentSpanId": "af42c0e4dafa2c4c",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533053374000",
                            "endTimeUnixNano": "1742478533053663000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "d11bf9040cd3d732",
                            "parentSpanId": "af42c0e4dafa2c4c",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::call",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533053773000",
                            "endTimeUnixNano": "1742478533053845000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                },
                                {
                                    "key": "data_my_data_fields",
                                    "value": {
                                        "arrayValue": {
                                            "values": [
                                                {
                                                    "stringValue": "results"
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "key": "results",
                                    "value": {
                                        "arrayValue": {
                                            "values": [
                                                {
                                                    "doubleValue": 1
                                                },
                                                {
                                                    "doubleValue": 2
                                                },
                                                {
                                                    "doubleValue": 2
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "f97c2dc0424aa79e",
                            "parentSpanId": "af42c0e4dafa2c4c",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533053962000",
                            "endTimeUnixNano": "1742478533054125000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "af42c0e4dafa2c4c",
                            "parentSpanId": "a14aeb87ee8f4623",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533053173000",
                            "endTimeUnixNano": "1742478533054165000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                },
                                {
                                    "key": "test.case.result.status",
                                    "value": {
                                        "stringValue": "pass"
                                    }
                                }
                            ],
                            "status": {
                                "code": 1
                            }
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "a956a363500e0bcb",
                            "parentSpanId": "230a4969fb8fd35f",
                            "flags": 256,
                            "name": "event_loop setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533054409000",
                            "endTimeUnixNano": "1742478533054658000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1147"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "function"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "230a4969fb8fd35f",
                            "parentSpanId": "a434f9aa3d96abf7",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533054339000",
                            "endTimeUnixNano": "1742478533054693000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "f8cc3961ac9c4306",
                            "parentSpanId": "a434f9aa3d96abf7",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::call",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533054758000",
                            "endTimeUnixNano": "1742478533055865000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "bd03bef1110db7aa",
                            "parentSpanId": "0de76592b5e1673e",
                            "flags": 256,
                            "name": "event_loop teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533103182000",
                            "endTimeUnixNano": "1742478533103581000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1147"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "function"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "81d0a15f6d4cdd80",
                            "parentSpanId": "0de76592b5e1673e",
                            "flags": 256,
                            "name": "event_loop_policy teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533103605000",
                            "endTimeUnixNano": "1742478533103652000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop_policy"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1187"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "session"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "0de76592b5e1673e",
                            "parentSpanId": "a434f9aa3d96abf7",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533103161000",
                            "endTimeUnixNano": "1742478533103730000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "a434f9aa3d96abf7",
                            "parentSpanId": "a14aeb87ee8f4623",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests",
                            "kind": 1,
                            "startTimeUnixNano": "1742478533054278000",
                            "endTimeUnixNano": "1742478533103783000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                },
                                {
                                    "key": "test.case.result.status",
                                    "value": {
                                        "stringValue": "fail"
                                    }
                                }
                            ],
                            "events": [
                                {
                                    "timeUnixNano": "1742478533103064000",
                                    "name": "exception",
                                    "attributes": [
                                        {
                                            "key": "exception.type",
                                            "value": {
                                                "stringValue": "KeyError"
                                            }
                                        },
                                        {
                                            "key": "exception.message",
                                            "value": {
                                                "stringValue": "'results'"
                                            }
                                        },
                                        {
                                            "key": "exception.stacktrace",
                                            "value": {
                                                "stringValue": "@pytest.mark.asyncio\n    async def test_get_requests() -\u003e None:\n        proxy = get_mock_proxy(\"example_tests/test_spans.json\")\n        try:\n            sum_sum = 0.0\n            sum_count = 0\n            async for data in load_data(\n                proxy=proxy,\n                data_name=\"my_data\",\n                max_data_age=timedelta(weeks=4),\n            ):\n\u003e               sum_sum += sum(data[\"results\"])\nE               KeyError: 'results'\n\nexample_tests/new_health_check_test.py:92: KeyError"
                                            }
                                        },
                                        {
                                            "key": "exception.escaped",
                                            "value": {
                                                "stringValue": "False"
                                            }
                                        }
                                    ]
                                }
                            ],
                            "status": {
                                "message": "\u003cclass 'KeyError'\u003e: 'results'",
                                "code": 2
                            }
                        },
                        {
                            "traceId": "f2b96d8df8d7a6ffec3536fa70db798f",
                            "spanId": "a14aeb87ee8f4623",
                            "parentSpanId": "",
                            "flags": 256,
                            "name": "test run",
                            "kind": 1,
                            "startTimeUnixNano": "1742478532619659000",
                            "endTimeUnixNano": "1742478533103870000",
                            "attributes": [
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "run"
                                    }
                                }
                            ],
                            "status": {
                                "code": 2
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "python-opentelemetry-access"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.12.7"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.12.7 (main, Oct 16 2024, 07:12:08) [Clang 18.1.8 ]"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "intValue": "75049"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "python3.12"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/.local/share/uv/python/cpython-3.12.7-macos-aarch64-none/bin/python3.12"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/python3 /Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/pytest --export-traces example_tests"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/python3"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/pytest --export-traces example_tests"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "jonaspuksta"
                        }
                    },
                    {
                        "key": "service.version",
                        "value": {
                            "stringValue": "e8d829a8db1d196b5229f48efcacdbbd47eda24b"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "pytest-opentelemetry"
                    },
                    "spans": [
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "dbb254103008e1ca",
                            "parentSpanId": "c04528f419b3c48c",
                            "flags": 256,
                            "name": "event_loop_policy setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541218306000",
                            "endTimeUnixNano": "1742478541218350000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop_policy"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1187"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "session"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "c04528f419b3c48c",
                            "parentSpanId": "f52c78d77d9d64b9",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541218206000",
                            "endTimeUnixNano": "1742478541218403000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "3afbf2f91489229f",
                            "parentSpanId": "f52c78d77d9d64b9",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::call",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541218486000",
                            "endTimeUnixNano": "1742478541218552000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                },
                                {
                                    "key": "data_my_data_fields",
                                    "value": {
                                        "arrayValue": {
                                            "values": [
                                                {
                                                    "stringValue": "results"
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "key": "results",
                                    "value": {
                                        "arrayValue": {
                                            "values": [
                                                {
                                                    "doubleValue": 1
                                                },
                                                {
                                                    "doubleValue": 2
                                                },
                                                {
                                                    "doubleValue": 2
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "63706839c40a455a",
                            "parentSpanId": "f52c78d77d9d64b9",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541218652000",
                            "endTimeUnixNano": "1742478541218792000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "f52c78d77d9d64b9",
                            "parentSpanId": "9037af6379cd5306",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541218058000",
                            "endTimeUnixNano": "1742478541218829000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                },
                                {
                                    "key": "test.case.result.status",
                                    "value": {
                                        "stringValue": "pass"
                                    }
                                }
                            ],
                            "status": {
                                "code": 1
                            }
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "a7fce039063098fa",
                            "parentSpanId": "5ebb7ae77d05aa1e",
                            "flags": 256,
                            "name": "event_loop setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541219013000",
                            "endTimeUnixNano": "1742478541219227000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1147"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "function"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "5ebb7ae77d05aa1e",
                            "parentSpanId": "bd0b97a10c433261",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541218954000",
                            "endTimeUnixNano": "1742478541219255000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "cfd45589ac2dbb51",
                            "parentSpanId": "bd0b97a10c433261",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::call",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541219310000",
                            "endTimeUnixNano": "1742478541220249000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "d205125f3f8d1500",
                            "parentSpanId": "f0c9f54030fab0cb",
                            "flags": 256,
                            "name": "event_loop teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541266516000",
                            "endTimeUnixNano": "1742478541266819000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1147"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "function"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "858a822295a78d30",
                            "parentSpanId": "f0c9f54030fab0cb",
                            "flags": 256,
                            "name": "event_loop_policy teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541266836000",
                            "endTimeUnixNano": "1742478541266869000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop_policy"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1187"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "session"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "f0c9f54030fab0cb",
                            "parentSpanId": "bd0b97a10c433261",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541266499000",
                            "endTimeUnixNano": "1742478541266938000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "bd0b97a10c433261",
                            "parentSpanId": "9037af6379cd5306",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests",
                            "kind": 1,
                            "startTimeUnixNano": "1742478541218905000",
                            "endTimeUnixNano": "1742478541266987000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                },
                                {
                                    "key": "test.case.result.status",
                                    "value": {
                                        "stringValue": "fail"
                                    }
                                }
                            ],
                            "events": [
                                {
                                    "timeUnixNano": "1742478541266411000",
                                    "name": "exception",
                                    "attributes": [
                                        {
                                            "key": "exception.type",
                                            "value": {
                                                "stringValue": "KeyError"
                                            }
                                        },
                                        {
                                            "key": "exception.message",
                                            "value": {
                                                "stringValue": "'results'"
                                            }
                                        },
                                        {
                                            "key": "exception.stacktrace",
                                            "value": {
                                                "stringValue": "@pytest.mark.asyncio\n    async def test_get_requests() -\u003e None:\n        proxy = get_mock_proxy(\"example_tests/test_spans.json\")\n        try:\n            sum_sum = 0.0\n            sum_count = 0\n            async for data in load_data(\n                proxy=proxy,\n                data_name=\"my_data\",\n                max_data_age=timedelta(weeks=4),\n            ):\n\u003e               sum_sum += sum(data[\"results\"])\nE               KeyError: 'results'\n\nexample_tests/new_health_check_test.py:92: KeyError"
                                            }
                                        },
                                        {
                                            "key": "exception.escaped",
                                            "value": {
                                                "stringValue": "False"
                                            }
                                        }
                                    ]
                                }
                            ],
                            "status": {
                                "message": "\u003cclass 'KeyError'\u003e: 'results'",
                                "code": 2
                            }
                        },
                        {
                            "traceId": "e82ec4b794d58d7505c0988f9720b834",
                            "spanId": "9037af6379cd5306",
                            "parentSpanId": "",
                            "flags": 256,
                            "name": "test run",
                            "kind": 1,
                            "startTimeUnixNano": "1742478540752779000",
                            "endTimeUnixNano": "1742478541267065000",
                            "attributes": [
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "run"
                                    }
                                }
                            ],
                            "status": {
                                "code": 2
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "python-opentelemetry-access"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.12.7"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.12.7 (main, Oct 16 2024, 07:12:08) [Clang 18.1.8 ]"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "intValue": "75098"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "python3.12"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/.local/share/uv/python/cpython-3.12.7-macos-aarch64-none/bin/python3.12"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/python3 /Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/pytest --export-traces example_tests"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/python3"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/pytest --export-traces example_tests"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "jonaspuksta"
                        }
                    },
                    {
                        "key": "service.version",
                        "value": {
                            "stringValue": "e8d829a8db1d196b5229f48efcacdbbd47eda24b"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "pytest-opentelemetry"
                    },
                    "spans": [
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "2414d33ad563c7fa",
                            "parentSpanId": "5bc58c44cc5207c3",
                            "flags": 256,
                            "name": "event_loop_policy setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544104059000",
                            "endTimeUnixNano": "1742478544104098000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop_policy"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1187"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "session"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "5bc58c44cc5207c3",
                            "parentSpanId": "c5b7fcf8e6380cb3",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544103969000",
                            "endTimeUnixNano": "1742478544104152000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "972bcce601e38541",
                            "parentSpanId": "c5b7fcf8e6380cb3",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::call",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544104243000",
                            "endTimeUnixNano": "1742478544104303000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                },
                                {
                                    "key": "data_my_data_fields",
                                    "value": {
                                        "arrayValue": {
                                            "values": [
                                                {
                                                    "stringValue": "results"
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "key": "results",
                                    "value": {
                                        "arrayValue": {
                                            "values": [
                                                {
                                                    "doubleValue": 1
                                                },
                                                {
                                                    "doubleValue": 2
                                                },
                                                {
                                                    "doubleValue": 2
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "045acf470105935d",
                            "parentSpanId": "c5b7fcf8e6380cb3",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544104402000",
                            "endTimeUnixNano": "1742478544104539000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "c5b7fcf8e6380cb3",
                            "parentSpanId": "e3ef216d291d113f",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544103822000",
                            "endTimeUnixNano": "1742478544104574000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                },
                                {
                                    "key": "test.case.result.status",
                                    "value": {
                                        "stringValue": "pass"
                                    }
                                }
                            ],
                            "status": {
                                "code": 1
                            }
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "8c3fb8a1fc794182",
                            "parentSpanId": "5c1b8cee4bb8b176",
                            "flags": 256,
                            "name": "event_loop setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544104754000",
                            "endTimeUnixNano": "1742478544104969000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1147"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "function"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "5c1b8cee4bb8b176",
                            "parentSpanId": "df11e0a382f46b2d",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544104697000",
                            "endTimeUnixNano": "1742478544105000000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "853445d0245f2869",
                            "parentSpanId": "df11e0a382f46b2d",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::call",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544105062000",
                            "endTimeUnixNano": "1742478544105746000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "10da5e03dfe9b1e0",
                            "parentSpanId": "01ecc0bad4c369ee",
                            "flags": 256,
                            "name": "event_loop teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544149322000",
                            "endTimeUnixNano": "1742478544149625000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1147"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "function"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "d351493e801a0a2d",
                            "parentSpanId": "01ecc0bad4c369ee",
                            "flags": 256,
                            "name": "event_loop_policy teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544149642000",
                            "endTimeUnixNano": "1742478544149673000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop_policy"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1187"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "session"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "01ecc0bad4c369ee",
                            "parentSpanId": "df11e0a382f46b2d",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544149301000",
                            "endTimeUnixNano": "1742478544149749000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "df11e0a382f46b2d",
                            "parentSpanId": "e3ef216d291d113f",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests",
                            "kind": 1,
                            "startTimeUnixNano": "1742478544104647000",
                            "endTimeUnixNano": "1742478544149800000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                },
                                {
                                    "key": "test.case.result.status",
                                    "value": {
                                        "stringValue": "fail"
                                    }
                                }
                            ],
                            "events": [
                                {
                                    "timeUnixNano": "1742478544149211000",
                                    "name": "exception",
                                    "attributes": [
                                        {
                                            "key": "exception.type",
                                            "value": {
                                                "stringValue": "KeyError"
                                            }
                                        },
                                        {
                                            "key": "exception.message",
                                            "value": {
                                                "stringValue": "'results'"
                                            }
                                        },
                                        {
                                            "key": "exception.stacktrace",
                                            "value": {
                                                "stringValue": "@pytest.mark.asyncio\n    async def test_get_requests() -\u003e None:\n        proxy = get_mock_proxy(\"example_tests/test_spans.json\")\n        try:\n            sum_sum = 0.0\n            sum_count = 0\n            async for data in load_data(\n                proxy=proxy,\n                data_name=\"my_data\",\n                max_data_age=timedelta(weeks=4),\n            ):\n\u003e               sum_sum += sum(data[\"results\"])\nE               KeyError: 'results'\n\nexample_tests/new_health_check_test.py:92: KeyError"
                                            }
                                        },
                                        {
                                            "key": "exception.escaped",
                                            "value": {
                                                "stringValue": "False"
                                            }
                                        }
                                    ]
                                }
                            ],
                            "status": {
                                "message": "\u003cclass 'KeyError'\u003e: 'results'",
                                "code": 2
                            }
                        },
                        {
                            "traceId": "a5bcf24ef6d0d6c660c4b9fade7aaf3b",
                            "spanId": "e3ef216d291d113f",
                            "parentSpanId": "",
                            "flags": 256,
                            "name": "test run",
                            "kind": 1,
                            "startTimeUnixNano": "1742478543717342000",
                            "endTimeUnixNano": "1742478544149883000",
                            "attributes": [
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "run"
                                    }
                                }
                            ],
                            "status": {
                                "code": 2
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "python-opentelemetry-access"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.12.7"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.12.7 (main, Oct 16 2024, 07:12:08) [Clang 18.1.8 ]"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "intValue": "75115"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "python3.12"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/.local/share/uv/python/cpython-3.12.7-macos-aarch64-none/bin/python3.12"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/python3 /Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/pytest --export-traces example_tests"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/python3"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/pytest --export-traces example_tests"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "jonaspuksta"
                        }
                    },
                    {
                        "key": "service.version",
                        "value": {
                            "stringValue": "e8d829a8db1d196b5229f48efcacdbbd47eda24b"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "pytest-opentelemetry"
                    },
                    "spans": [
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "0d0b24161b33ae99",
                            "parentSpanId": "ca7292f78a9a542b",
                            "flags": 256,
                            "name": "event_loop_policy setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545479546000",
                            "endTimeUnixNano": "1742478545479585000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop_policy"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1187"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "session"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "ca7292f78a9a542b",
                            "parentSpanId": "314bf7bfdd96b00a",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545479443000",
                            "endTimeUnixNano": "1742478545479632000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "3fd874104e788a81",
                            "parentSpanId": "314bf7bfdd96b00a",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::call",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545479715000",
                            "endTimeUnixNano": "1742478545479776000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                },
                                {
                                    "key": "data_my_data_fields",
                                    "value": {
                                        "arrayValue": {
                                            "values": [
                                                {
                                                    "stringValue": "results"
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "key": "results",
                                    "value": {
                                        "arrayValue": {
                                            "values": [
                                                {
                                                    "doubleValue": 1
                                                },
                                                {
                                                    "doubleValue": 2
                                                },
                                                {
                                                    "doubleValue": 2
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "79f95a57ac375006",
                            "parentSpanId": "314bf7bfdd96b00a",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545479877000",
                            "endTimeUnixNano": "1742478545480010000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "314bf7bfdd96b00a",
                            "parentSpanId": "619b48d2f5d0688b",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545479304000",
                            "endTimeUnixNano": "1742478545480043000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                },
                                {
                                    "key": "test.case.result.status",
                                    "value": {
                                        "stringValue": "pass"
                                    }
                                }
                            ],
                            "status": {
                                "code": 1
                            }
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "5c643d7c3200dfc1",
                            "parentSpanId": "9fe3d8930c53595e",
                            "flags": 256,
                            "name": "event_loop setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545480220000",
                            "endTimeUnixNano": "1742478545480450000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1147"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "function"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "9fe3d8930c53595e",
                            "parentSpanId": "807b1d4c40aef484",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545480165000",
                            "endTimeUnixNano": "1742478545480479000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "4b1f8a4997440f38",
                            "parentSpanId": "807b1d4c40aef484",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::call",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545480537000",
                            "endTimeUnixNano": "1742478545481262000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "fac1f22c73342898",
                            "parentSpanId": "38d44a39a83f782b",
                            "flags": 256,
                            "name": "event_loop teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545524443000",
                            "endTimeUnixNano": "1742478545524763000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1147"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "function"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "207ecbfcac141871",
                            "parentSpanId": "38d44a39a83f782b",
                            "flags": 256,
                            "name": "event_loop_policy teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545524780000",
                            "endTimeUnixNano": "1742478545524811000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop_policy"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1187"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "session"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "38d44a39a83f782b",
                            "parentSpanId": "807b1d4c40aef484",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545524427000",
                            "endTimeUnixNano": "1742478545524887000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "807b1d4c40aef484",
                            "parentSpanId": "619b48d2f5d0688b",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545480118000",
                            "endTimeUnixNano": "1742478545524934000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                },
                                {
                                    "key": "test.case.result.status",
                                    "value": {
                                        "stringValue": "fail"
                                    }
                                }
                            ],
                            "events": [
                                {
                                    "timeUnixNano": "1742478545524341000",
                                    "name": "exception",
                                    "attributes": [
                                        {
                                            "key": "exception.type",
                                            "value": {
                                                "stringValue": "KeyError"
                                            }
                                        },
                                        {
                                            "key": "exception.message",
                                            "value": {
                                                "stringValue": "'results'"
                                            }
                                        },
                                        {
                                            "key": "exception.stacktrace",
                                            "value": {
                                                "stringValue": "@pytest.mark.asyncio\n    async def test_get_requests() -\u003e None:\n        proxy = get_mock_proxy(\"example_tests/test_spans.json\")\n        try:\n            sum_sum = 0.0\n            sum_count = 0\n            async for data in load_data(\n                proxy=proxy,\n                data_name=\"my_data\",\n                max_data_age=timedelta(weeks=4),\n            ):\n\u003e               sum_sum += sum(data[\"results\"])\nE               KeyError: 'results'\n\nexample_tests/new_health_check_test.py:92: KeyError"
                                            }
                                        },
                                        {
                                            "key": "exception.escaped",
                                            "value": {
                                                "stringValue": "False"
                                            }
                                        }
                                    ]
                                }
                            ],
                            "status": {
                                "message": "\u003cclass 'KeyError'\u003e: 'results'",
                                "code": 2
                            }
                        },
                        {
                            "traceId": "d75880c6c0134444976d62e846031f44",
                            "spanId": "619b48d2f5d0688b",
                            "parentSpanId": "",
                            "flags": 256,
                            "name": "test run",
                            "kind": 1,
                            "startTimeUnixNano": "1742478545107316000",
                            "endTimeUnixNano": "1742478545525010000",
                            "attributes": [
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "run"
                                    }
                                }
                            ],
                            "status": {
                                "code": 2
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "python-opentelemetry-access"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.12.7"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.12.7 (main, Oct 16 2024, 07:12:08) [Clang 18.1.8 ]"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "intValue": "75137"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "python3.12"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/.local/share/uv/python/cpython-3.12.7-macos-aarch64-none/bin/python3.12"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/python3 /Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/pytest --export-traces example_tests"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/python3"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/bin/pytest --export-traces example_tests"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "jonaspuksta"
                        }
                    },
                    {
                        "key": "service.version",
                        "value": {
                            "stringValue": "e8d829a8db1d196b5229f48efcacdbbd47eda24b"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "pytest-opentelemetry"
                    },
                    "spans": [
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "756a33969fcf98a4",
                            "parentSpanId": "e8f27d2993ce244d",
                            "flags": 256,
                            "name": "event_loop_policy setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546856372000",
                            "endTimeUnixNano": "1742478546856411000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop_policy"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1187"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "session"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "e8f27d2993ce244d",
                            "parentSpanId": "e57b92298ccd7ea4",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546856286000",
                            "endTimeUnixNano": "1742478546856459000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "f330665d5c039dbf",
                            "parentSpanId": "e57b92298ccd7ea4",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::call",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546856550000",
                            "endTimeUnixNano": "1742478546856610000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                },
                                {
                                    "key": "data_my_data_fields",
                                    "value": {
                                        "arrayValue": {
                                            "values": [
                                                {
                                                    "stringValue": "results"
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "key": "results",
                                    "value": {
                                        "arrayValue": {
                                            "values": [
                                                {
                                                    "doubleValue": 1
                                                },
                                                {
                                                    "doubleValue": 2
                                                },
                                                {
                                                    "doubleValue": 2
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "5fa37f6b17fc9f80",
                            "parentSpanId": "e57b92298ccd7ea4",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data::teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546856705000",
                            "endTimeUnixNano": "1742478546856835000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "e57b92298ccd7ea4",
                            "parentSpanId": "27fd67d72bb66b8b",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_generate_data",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546856146000",
                            "endTimeUnixNano": "1742478546856870000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_generate_data"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "76"
                                    }
                                },
                                {
                                    "key": "test.case.result.status",
                                    "value": {
                                        "stringValue": "pass"
                                    }
                                }
                            ],
                            "status": {
                                "code": 1
                            }
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "43e3b1e906591e02",
                            "parentSpanId": "10b4f0a2070526c2",
                            "flags": 256,
                            "name": "event_loop setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546857050000",
                            "endTimeUnixNano": "1742478546857269000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1147"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "function"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "10b4f0a2070526c2",
                            "parentSpanId": "81fb5e343b3a07c9",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::setup",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546856992000",
                            "endTimeUnixNano": "1742478546857299000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "183994acef358ed0",
                            "parentSpanId": "81fb5e343b3a07c9",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::call",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546857356000",
                            "endTimeUnixNano": "1742478546858221000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "643b42d1ae009e19",
                            "parentSpanId": "9bca1969373a2467",
                            "flags": 256,
                            "name": "event_loop teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546902866000",
                            "endTimeUnixNano": "1742478546903180000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1147"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "function"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "f92b755ac5b611d9",
                            "parentSpanId": "9bca1969373a2467",
                            "flags": 256,
                            "name": "event_loop_policy teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546903197000",
                            "endTimeUnixNano": "1742478546903234000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "/Users/jonaspuksta/workspace/python-opentelemetry-access/.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "event_loop_policy"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "1187"
                                    }
                                },
                                {
                                    "key": "pytest.fixture_scope",
                                    "value": {
                                        "stringValue": "session"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "fixture"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "9bca1969373a2467",
                            "parentSpanId": "81fb5e343b3a07c9",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests::teardown",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546902850000",
                            "endTimeUnixNano": "1742478546903307000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "81fb5e343b3a07c9",
                            "parentSpanId": "27fd67d72bb66b8b",
                            "flags": 256,
                            "name": "example_tests/new_health_check_test.py::test_get_requests",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546856944000",
                            "endTimeUnixNano": "1742478546903354000",
                            "attributes": [
                                {
                                    "key": "code.filepath",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py"
                                    }
                                },
                                {
                                    "key": "code.function",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "test.case.name",
                                    "value": {
                                        "stringValue": "test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.nodeid",
                                    "value": {
                                        "stringValue": "example_tests/new_health_check_test.py::test_get_requests"
                                    }
                                },
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "test"
                                    }
                                },
                                {
                                    "key": "code.lineno",
                                    "value": {
                                        "intValue": "80"
                                    }
                                },
                                {
                                    "key": "test.case.result.status",
                                    "value": {
                                        "stringValue": "fail"
                                    }
                                }
                            ],
                            "events": [
                                {
                                    "timeUnixNano": "1742478546902760000",
                                    "name": "exception",
                                    "attributes": [
                                        {
                                            "key": "exception.type",
                                            "value": {
                                                "stringValue": "KeyError"
                                            }
                                        },
                                        {
                                            "key": "exception.message",
                                            "value": {
                                                "stringValue": "'results'"
                                            }
                                        },
                                        {
                                            "key": "exception.stacktrace",
                                            "value": {
                                                "stringValue": "@pytest.mark.asyncio\n    async def test_get_requests() -\u003e None:\n        proxy = get_mock_proxy(\"example_tests/test_spans.json\")\n        try:\n            sum_sum = 0.0\n            sum_count = 0\n            async for data in load_data(\n                proxy=proxy,\n                data_name=\"my_data\",\n                max_data_age=timedelta(weeks=4),\n            ):\n\u003e               sum_sum += sum(data[\"results\"])\nE               KeyError: 'results'\n\nexample_tests/new_health_check_test.py:92: KeyError"
                                            }
                                        },
                                        {
                                            "key": "exception.escaped",
                                            "value": {
                                                "stringValue": "False"
                                            }
                                        }
                                    ]
                                }
                            ],
                            "status": {
                                "message": "\u003cclass 'KeyError'\u003e: 'results'",
                                "code": 2
                            }
                        },
                        {
                            "traceId": "ee8e0b34f049679317a5439ce2a2889c",
                            "spanId": "27fd67d72bb66b8b",
                            "parentSpanId": "",
                            "flags": 256,
                            "name": "test run",
                            "kind": 1,
                            "startTimeUnixNano": "1742478546473482000",
                            "endTimeUnixNano": "1742478546903442000",
                            "attributes": [
                                {
                                    "key": "pytest.span_type",
                                    "value": {
                                        "stringValue": "run"
                                    }
                                }
                            ],
                            "status": {
                                "code": 2
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "container.id",
                        "value": {
                            "stringValue": "7476c08a27f26b8a8f4d34ce6e3a5bed1231aa6493f1f682212ac04d7d54ac7b"
                        }
                    },
                    {
                        "key": "container.runtime",
                        "value": {
                            "stringValue": "docker"
                        }
                    },
                    {
                        "key": "health_check.name",
                        "value": {
                            "stringValue": "hourly-simple-http-check"
                        }
                    },
                    {
                        "key": "k8s.cronjob.name",
                        "value": {
                            "stringValue": "resource-health-healthchecks-cronjob-2"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/venv/bin/python"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/venv/bin/python /venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "pytest"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/usr/local/bin/python3.11"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "root"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "stringValue": "13"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.11.10 (main, Oct 19 2024, 01:04:28) [GCC 12.2.0]"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.11.10"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "unknown_service:pytest"
                        }
                    },
                    {
                        "key": "telemetry.auto.version",
                        "value": {
                            "stringValue": "0.46b0"
                        }
                    },
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "user.id",
                        "value": {
                            "stringValue": "Health BB user"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "opentelemetry.instrumentation.requests",
                        "version": "0.46b0"
                    },
                    "spans": [
                        {
                            "traceId": "11fb21dac257ef8f470fc9cc59ab32e3",
                            "spanId": "9bd83f0b50ece132",
                            "parentSpanId": "dd0b4d5b98a1a352",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742428804865720322",
                            "endTimeUnixNano": "1742428805457068521",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://www.google.com/"
                                    }
                                }
                            ],
                            "status": {}
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "container.id",
                        "value": {
                            "stringValue": "0971d6eed28e057f30d18307be549708f43fcf707bab5ad83dfcc42c6e6a1502"
                        }
                    },
                    {
                        "key": "container.runtime",
                        "value": {
                            "stringValue": "docker"
                        }
                    },
                    {
                        "key": "health_check.name",
                        "value": {
                            "stringValue": "hourly-simple-openeo-check"
                        }
                    },
                    {
                        "key": "k8s.cronjob.name",
                        "value": {
                            "stringValue": "resource-health-healthchecks-cronjob-3"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/venv/bin/python"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/venv/bin/python /venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "pytest"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/usr/local/bin/python3.11"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "root"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "stringValue": "13"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.11.10 (main, Oct 19 2024, 01:04:28) [GCC 12.2.0]"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.11.10"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "unknown_service:pytest"
                        }
                    },
                    {
                        "key": "telemetry.auto.version",
                        "value": {
                            "stringValue": "0.46b0"
                        }
                    },
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "user.id",
                        "value": {
                            "stringValue": "Health BB user"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "opentelemetry.instrumentation.requests",
                        "version": "0.46b0"
                    },
                    "spans": [
                        {
                            "traceId": "c0fda0d61f9ac35f2b143718e972d8be",
                            "spanId": "af35bdce21ea6547",
                            "parentSpanId": "3c4ebd1166f7cd30",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742428804898483791",
                            "endTimeUnixNano": "1742428804983450766",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeo.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "c0fda0d61f9ac35f2b143718e972d8be",
                            "spanId": "fd440f960ece721f",
                            "parentSpanId": "48acd673b01789c4",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742428804986254670",
                            "endTimeUnixNano": "1742428805038682733",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeo-staging.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "c0fda0d61f9ac35f2b143718e972d8be",
                            "spanId": "7e55b6660929b5cc",
                            "parentSpanId": "ace0a45d1af3ff6d",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742428805041350003",
                            "endTimeUnixNano": "1742428805073799413",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeofed.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "c0fda0d61f9ac35f2b143718e972d8be",
                            "spanId": "cb2fae4a69fb5fab",
                            "parentSpanId": "7faf9a3ed886bfc8",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742428805076426652",
                            "endTimeUnixNano": "1742428805163417678",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeofed-staging.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "container.id",
                        "value": {
                            "stringValue": "7476c08a27f26b8a8f4d34ce6e3a5bed1231aa6493f1f682212ac04d7d54ac7b"
                        }
                    },
                    {
                        "key": "container.runtime",
                        "value": {
                            "stringValue": "docker"
                        }
                    },
                    {
                        "key": "health_check.name",
                        "value": {
                            "stringValue": "hourly-simple-http-check"
                        }
                    },
                    {
                        "key": "k8s.cronjob.name",
                        "value": {
                            "stringValue": "resource-health-healthchecks-cronjob-2"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/venv/bin/python"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/venv/bin/python /venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "pytest"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/usr/local/bin/python3.11"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "root"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "stringValue": "13"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.11.10 (main, Oct 19 2024, 01:04:28) [GCC 12.2.0]"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.11.10"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "unknown_service:pytest"
                        }
                    },
                    {
                        "key": "telemetry.auto.version",
                        "value": {
                            "stringValue": "0.46b0"
                        }
                    },
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "user.id",
                        "value": {
                            "stringValue": "Health BB user"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "opentelemetry.instrumentation.requests",
                        "version": "0.46b0"
                    },
                    "spans": [
                        {
                            "traceId": "11fb21dac257ef8f470fc9cc59ab32e3",
                            "spanId": "230c4a71ddc7531e",
                            "parentSpanId": "8017572b9cbe2f2e",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742428805459881957",
                            "endTimeUnixNano": "1742428805548710408",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://eoepca.org/"
                                    }
                                }
                            ],
                            "status": {}
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "container.id",
                        "value": {
                            "stringValue": "fea94228c7a9f3a20596770656166fc36bdad20ac9df50f6826e1f75cfcb4de1"
                        }
                    },
                    {
                        "key": "container.runtime",
                        "value": {
                            "stringValue": "docker"
                        }
                    },
                    {
                        "key": "health_check.name",
                        "value": {
                            "stringValue": "hourly-simple-openeo-check"
                        }
                    },
                    {
                        "key": "k8s.cronjob.name",
                        "value": {
                            "stringValue": "resource-health-healthchecks-cronjob-3"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/venv/bin/python"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/venv/bin/python /venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "pytest"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/usr/local/bin/python3.11"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "root"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "stringValue": "13"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.11.10 (main, Oct 19 2024, 01:04:28) [GCC 12.2.0]"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.11.10"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "unknown_service:pytest"
                        }
                    },
                    {
                        "key": "telemetry.auto.version",
                        "value": {
                            "stringValue": "0.46b0"
                        }
                    },
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "user.id",
                        "value": {
                            "stringValue": "Health BB user"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "opentelemetry.instrumentation.requests",
                        "version": "0.46b0"
                    },
                    "spans": [
                        {
                            "traceId": "d1821f87cc0af375849dae4c0361a5ad",
                            "spanId": "c673dccd333ffe6f",
                            "parentSpanId": "c851a6993a0de3ce",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742432404389897564",
                            "endTimeUnixNano": "1742432404497619306",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeo.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d1821f87cc0af375849dae4c0361a5ad",
                            "spanId": "a597f5111350cc0d",
                            "parentSpanId": "30ce2eeb576c88cd",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742432404500733859",
                            "endTimeUnixNano": "1742432404552028984",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeo-staging.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d1821f87cc0af375849dae4c0361a5ad",
                            "spanId": "dc248acbb67e2f76",
                            "parentSpanId": "bd041912da529022",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742432404554750475",
                            "endTimeUnixNano": "1742432404593298845",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeofed.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "d1821f87cc0af375849dae4c0361a5ad",
                            "spanId": "650f6a5062857395",
                            "parentSpanId": "5809e3a0d6b3d9e7",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742432404596169281",
                            "endTimeUnixNano": "1742432404652327262",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeofed-staging.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "container.id",
                        "value": {
                            "stringValue": "d853d497e95949a4ba8b76761620c95f015f01d9d3a5463bafc8ff1d6683538a"
                        }
                    },
                    {
                        "key": "container.runtime",
                        "value": {
                            "stringValue": "docker"
                        }
                    },
                    {
                        "key": "health_check.name",
                        "value": {
                            "stringValue": "hourly-simple-http-check"
                        }
                    },
                    {
                        "key": "k8s.cronjob.name",
                        "value": {
                            "stringValue": "resource-health-healthchecks-cronjob-2"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/venv/bin/python"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/venv/bin/python /venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "pytest"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/usr/local/bin/python3.11"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "root"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "stringValue": "13"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.11.10 (main, Oct 19 2024, 01:04:28) [GCC 12.2.0]"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.11.10"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "unknown_service:pytest"
                        }
                    },
                    {
                        "key": "telemetry.auto.version",
                        "value": {
                            "stringValue": "0.46b0"
                        }
                    },
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "user.id",
                        "value": {
                            "stringValue": "Health BB user"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "opentelemetry.instrumentation.requests",
                        "version": "0.46b0"
                    },
                    "spans": [
                        {
                            "traceId": "a5c9af5d19680f93aaf733502fe24859",
                            "spanId": "37377b3591f14497",
                            "parentSpanId": "35dc3e535fb4fd8e",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742432404965917866",
                            "endTimeUnixNano": "1742432405680148317",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://www.google.com/"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "a5c9af5d19680f93aaf733502fe24859",
                            "spanId": "49d5214dd7b3ce21",
                            "parentSpanId": "75d9d031c8cdaab0",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742432405682889651",
                            "endTimeUnixNano": "1742432405710202954",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://eoepca.org/"
                                    }
                                }
                            ],
                            "status": {}
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "container.id",
                        "value": {
                            "stringValue": "c1642ca577d180f531217d75dc71fda3ec8431c5cfb0fe7b6b0703ab6cda3cae"
                        }
                    },
                    {
                        "key": "container.runtime",
                        "value": {
                            "stringValue": "docker"
                        }
                    },
                    {
                        "key": "health_check.name",
                        "value": {
                            "stringValue": "hourly-simple-http-check"
                        }
                    },
                    {
                        "key": "k8s.cronjob.name",
                        "value": {
                            "stringValue": "resource-health-healthchecks-cronjob-2"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/venv/bin/python"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/venv/bin/python /venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "pytest"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/usr/local/bin/python3.11"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "root"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "stringValue": "13"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.11.10 (main, Oct 19 2024, 01:04:28) [GCC 12.2.0]"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.11.10"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "unknown_service:pytest"
                        }
                    },
                    {
                        "key": "telemetry.auto.version",
                        "value": {
                            "stringValue": "0.46b0"
                        }
                    },
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "user.id",
                        "value": {
                            "stringValue": "Health BB user"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "opentelemetry.instrumentation.requests",
                        "version": "0.46b0"
                    },
                    "spans": [
                        {
                            "traceId": "27292f39df18b09c09e052b5995c6e76",
                            "spanId": "ee38193370070974",
                            "parentSpanId": "bb4f2c1437e275a5",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742436004570108793",
                            "endTimeUnixNano": "1742436005278658545",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://www.google.com/"
                                    }
                                }
                            ],
                            "status": {}
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "container.id",
                        "value": {
                            "stringValue": "a84c0301d4a6652d7d62a3fb61bbb7c0ef5768913527f39b85f0d939310af932"
                        }
                    },
                    {
                        "key": "container.runtime",
                        "value": {
                            "stringValue": "docker"
                        }
                    },
                    {
                        "key": "health_check.name",
                        "value": {
                            "stringValue": "hourly-simple-openeo-check"
                        }
                    },
                    {
                        "key": "k8s.cronjob.name",
                        "value": {
                            "stringValue": "resource-health-healthchecks-cronjob-3"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/venv/bin/python"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/venv/bin/python /venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "pytest"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/usr/local/bin/python3.11"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "root"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "stringValue": "13"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.11.10 (main, Oct 19 2024, 01:04:28) [GCC 12.2.0]"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.11.10"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "unknown_service:pytest"
                        }
                    },
                    {
                        "key": "telemetry.auto.version",
                        "value": {
                            "stringValue": "0.46b0"
                        }
                    },
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "user.id",
                        "value": {
                            "stringValue": "Health BB user"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "opentelemetry.instrumentation.requests",
                        "version": "0.46b0"
                    },
                    "spans": [
                        {
                            "traceId": "7c86c1986d84a38b119465c5c2d433a5",
                            "spanId": "b812c512540210d6",
                            "parentSpanId": "6f082a830fd99007",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742436004703390486",
                            "endTimeUnixNano": "1742436004778613585",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeo.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "7c86c1986d84a38b119465c5c2d433a5",
                            "spanId": "c3f43106052d40ef",
                            "parentSpanId": "2f71cdd40ff26a71",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742436004781453020",
                            "endTimeUnixNano": "1742436004860070531",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeo-staging.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "7c86c1986d84a38b119465c5c2d433a5",
                            "spanId": "a17fcf87a294a873",
                            "parentSpanId": "73c0db9183fe04d3",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742436004862806493",
                            "endTimeUnixNano": "1742436004901036125",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeofed.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "7c86c1986d84a38b119465c5c2d433a5",
                            "spanId": "1752c2cf47a539d2",
                            "parentSpanId": "3efa3d2a77705c41",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742436004904251802",
                            "endTimeUnixNano": "1742436004937246868",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeofed-staging.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "container.id",
                        "value": {
                            "stringValue": "c1642ca577d180f531217d75dc71fda3ec8431c5cfb0fe7b6b0703ab6cda3cae"
                        }
                    },
                    {
                        "key": "container.runtime",
                        "value": {
                            "stringValue": "docker"
                        }
                    },
                    {
                        "key": "health_check.name",
                        "value": {
                            "stringValue": "hourly-simple-http-check"
                        }
                    },
                    {
                        "key": "k8s.cronjob.name",
                        "value": {
                            "stringValue": "resource-health-healthchecks-cronjob-2"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/venv/bin/python"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/venv/bin/python /venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "pytest"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/usr/local/bin/python3.11"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "root"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "stringValue": "13"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.11.10 (main, Oct 19 2024, 01:04:28) [GCC 12.2.0]"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.11.10"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "unknown_service:pytest"
                        }
                    },
                    {
                        "key": "telemetry.auto.version",
                        "value": {
                            "stringValue": "0.46b0"
                        }
                    },
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "user.id",
                        "value": {
                            "stringValue": "Health BB user"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "opentelemetry.instrumentation.requests",
                        "version": "0.46b0"
                    },
                    "spans": [
                        {
                            "traceId": "27292f39df18b09c09e052b5995c6e76",
                            "spanId": "59b6195c68375ea1",
                            "parentSpanId": "6f1dd90195519cae",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742436005281283813",
                            "endTimeUnixNano": "1742436005308315601",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://eoepca.org/"
                                    }
                                }
                            ],
                            "status": {}
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "container.id",
                        "value": {
                            "stringValue": "b288bbd6e58cb9b7f09f4ebd20a3e6d4baf366ab929027984a3cc08a0be5900f"
                        }
                    },
                    {
                        "key": "container.runtime",
                        "value": {
                            "stringValue": "docker"
                        }
                    },
                    {
                        "key": "health_check.name",
                        "value": {
                            "stringValue": "hourly-simple-openeo-check"
                        }
                    },
                    {
                        "key": "k8s.cronjob.name",
                        "value": {
                            "stringValue": "resource-health-healthchecks-cronjob-3"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/venv/bin/python"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/venv/bin/python /venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "pytest"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/usr/local/bin/python3.11"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "root"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "stringValue": "13"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.11.10 (main, Oct 19 2024, 01:04:28) [GCC 12.2.0]"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.11.10"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "unknown_service:pytest"
                        }
                    },
                    {
                        "key": "telemetry.auto.version",
                        "value": {
                            "stringValue": "0.46b0"
                        }
                    },
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "user.id",
                        "value": {
                            "stringValue": "Health BB user"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "opentelemetry.instrumentation.requests",
                        "version": "0.46b0"
                    },
                    "spans": [
                        {
                            "traceId": "366c9908ddef14ccd3ba8b3411fff358",
                            "spanId": "03f0697807ef764c",
                            "parentSpanId": "e92d74f2f724f17e",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742439604413764171",
                            "endTimeUnixNano": "1742439604490916300",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeo.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        },
                        {
                            "traceId": "366c9908ddef14ccd3ba8b3411fff358",
                            "spanId": "a180c8e01b2d1766",
                            "parentSpanId": "fb779a7a0eabddee",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742439604493836240",
                            "endTimeUnixNano": "1742439604557895520",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://openeo-staging.dataspace.copernicus.eu/openeo/1.2"
                                    }
                                }
                            ],
                            "status": {}
                        }
                    ]
                }
            ]
        },
        {
            "resource": {
                "attributes": [
                    {
                        "key": "container.id",
                        "value": {
                            "stringValue": "3dc973748bda42ec501e64f994b8eeda07667f7d3f4236f4a8debe0406003666"
                        }
                    },
                    {
                        "key": "container.runtime",
                        "value": {
                            "stringValue": "docker"
                        }
                    },
                    {
                        "key": "health_check.name",
                        "value": {
                            "stringValue": "hourly-simple-http-check"
                        }
                    },
                    {
                        "key": "k8s.cronjob.name",
                        "value": {
                            "stringValue": "resource-health-healthchecks-cronjob-2"
                        }
                    },
                    {
                        "key": "process.command",
                        "value": {
                            "stringValue": "/venv/bin/python"
                        }
                    },
                    {
                        "key": "process.command_args",
                        "value": {
                            "stringValue": "/venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.command_line",
                        "value": {
                            "stringValue": "/venv/bin/python /venv/bin/pytest --export-traces --suppress-tests-failed-exit-code tests.py --user-id defaultuser"
                        }
                    },
                    {
                        "key": "process.executable.name",
                        "value": {
                            "stringValue": "pytest"
                        }
                    },
                    {
                        "key": "process.executable.path",
                        "value": {
                            "stringValue": "/usr/local/bin/python3.11"
                        }
                    },
                    {
                        "key": "process.owner",
                        "value": {
                            "stringValue": "root"
                        }
                    },
                    {
                        "key": "process.pid",
                        "value": {
                            "stringValue": "13"
                        }
                    },
                    {
                        "key": "process.runtime.description",
                        "value": {
                            "stringValue": "3.11.10 (main, Oct 19 2024, 01:04:28) [GCC 12.2.0]"
                        }
                    },
                    {
                        "key": "process.runtime.name",
                        "value": {
                            "stringValue": "cpython"
                        }
                    },
                    {
                        "key": "process.runtime.version",
                        "value": {
                            "stringValue": "3.11.10"
                        }
                    },
                    {
                        "key": "service.name",
                        "value": {
                            "stringValue": "unknown_service:pytest"
                        }
                    },
                    {
                        "key": "telemetry.auto.version",
                        "value": {
                            "stringValue": "0.46b0"
                        }
                    },
                    {
                        "key": "telemetry.sdk.language",
                        "value": {
                            "stringValue": "python"
                        }
                    },
                    {
                        "key": "telemetry.sdk.name",
                        "value": {
                            "stringValue": "opentelemetry"
                        }
                    },
                    {
                        "key": "telemetry.sdk.version",
                        "value": {
                            "stringValue": "1.25.0"
                        }
                    },
                    {
                        "key": "user.id",
                        "value": {
                            "stringValue": "Health BB user"
                        }
                    }
                ]
            },
            "scopeSpans": [
                {
                    "scope": {
                        "name": "opentelemetry.instrumentation.requests",
                        "version": "0.46b0"
                    },
                    "spans": [
                        {
                            "traceId": "8fad0c49212f5bc5d766c2039d75b121",
                            "spanId": "9ebc9eb1a8cfa235",
                            "parentSpanId": "b9e94e8333faf8b8",
                            "name": "GET",
                            "kind": 3,
                            "startTimeUnixNano": "1742439604515085577",
                            "endTimeUnixNano": "1742439605114364323",
                            "attributes": [
                                {
                                    "key": "data_stream",
                                    "value": {
                                        "kvlistValue": [
                                            {
                                                "key": "dataset",
                                                "value": {
                                                    "stringValue": "default"
                                                }
                                            },
                                            {
                                                "key": "namespace",
                                                "value": {
                                                    "stringValue": "namespace"
                                                }
                                            },
                                            {
                                                "key": "type",
                                                "value": {
                                                    "stringValue": "span"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "http.method",
                                    "value": {
                                        "stringValue": "GET"
                                    }
                                },
                                {
                                    "key": "http.status_code",
                                    "value": {
                                        "intValue": "200"
                                    }
                                },
                                {
                                    "key": "http.url",
                                    "value": {
                                        "stringValue": "https://www.google.com/"
                                    }
                                }
                            ],
                            "status": {}
                        }
                    ]
                }
            ]
        }
    ]
}